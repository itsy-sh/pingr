FROM node:14 as ui
COPY ./ui /ui
RUN cd /ui && npm install && npm run build



FROM golang:1.13-alpine as builder

RUN apk add git curl build-base bash openssh-client shadow


COPY . /go/src/pingr

RUN rm -rf /go/src/pingr/ui && mkdir -p /go/src/pingr/ui/build
COPY --from=ui /ui/build /go/src/pingr/ui/build

RUN go get github.com/mattn/go-sqlite3
RUN go install github.com/mattn/go-sqlite3
RUN go get -u github.com/go-bindata/go-bindata/...
RUN cd /go/src/pingr/ui && go-bindata -o fs.go -prefix "build/" -pkg ui build/

RUN cd /go/src/pingr; go mod download

RUN cd /go/src/pingr && go build -o /pingrd ./cmd/pingrd/pingrd.go

# copy the binary to a clean alpine image
FROM alpine
RUN apk add --no-cache tzdata ca-certificates iputils
COPY --from=builder /pingrd /
EXPOSE 8080
CMD /pingrd